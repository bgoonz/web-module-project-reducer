[{"/workspace/web-module-project-reducer/src/index.js":"1","/workspace/web-module-project-reducer/src/reportWebVitals.js":"2","/workspace/web-module-project-reducer/src/App.js":"3","/workspace/web-module-project-reducer/src/components/TotalDisplay.js":"4","/workspace/web-module-project-reducer/src/components/CalcButton.js":"5","/workspace/web-module-project-reducer/src/actions/index.js":"6","/workspace/web-module-project-reducer/src/reducers/index.js":"7"},{"size":500,"mtime":1624518524713,"results":"8","hashOfConfig":"9"},{"size":364,"mtime":1624518524749,"results":"10","hashOfConfig":"9"},{"size":4050,"mtime":1624518524649,"results":"11","hashOfConfig":"9"},{"size":497,"mtime":1624518524669,"results":"12","hashOfConfig":"9"},{"size":310,"mtime":1624518524661,"results":"13","hashOfConfig":"9"},{"size":513,"mtime":1624518524541,"results":"14","hashOfConfig":"9"},{"size":932,"mtime":1624518524737,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4t7l9v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"/workspace/web-module-project-reducer/src/index.js",[],"/workspace/web-module-project-reducer/src/reportWebVitals.js",[],["33","34"],"/workspace/web-module-project-reducer/src/App.js",["35","36","37"],"import React, { useReducer } from \"react\";\nimport reducer, { initialState } from \"./reducers/index\";\nimport \"./App.css\";\nimport {\n  ADD_ONE,\n  applyNumber,\n  changeOperator,\n  clearDisplay,\n} from \"./actions/index\";\nimport TotalDisplay from \"./components/TotalDisplay\";\nimport CalcButton from \"./components/CalcButton\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // const eventHandler = e => {\n  //   e.preventDefault();\n  //   dispatch({type: ADD_ONE});\n  // }\n\n  const betterHandler = (num) => {\n    dispatch(applyNumber(num));\n  };\n\n  const operatorHandler = (operator) => {\n    dispatch(changeOperator(operator));\n  };\n\n  const clearHandler = () => {\n    dispatch(clearDisplay());\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img width=\"40px\" src=\"./Lambda-Logo-Red.png\" /> Lambda Reducer\n          Challenge\n        </a>\n      </nav>\n\n      <div className=\"container row mt-5\">\n        <div className=\"col-md-12 d-flex justify-content-center\">\n          <form name=\"Cal\">\n            <TotalDisplay value={state.total} />\n            <div className=\"row details\">\n              <span id=\"operation\">\n                <b>Operation:</b> {state.operation}\n              </span>\n              <span id=\"memory\">\n                <b>Memory:</b> {state.memory}\n              </span>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={\"M+\"} />\n              <CalcButton value={\"MR\"} />\n              <CalcButton value={\"MC\"} />\n            </div>\n\n            <div className=\"row\">\n              <CalcButton\n                onClick={() => {\n                  betterHandler(1);\n                }}\n                value={1}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(2);\n                }}\n                value={2}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(3);\n                }}\n                value={3}\n              />\n            </div>\n\n            <div className=\"row\">\n              <CalcButton\n                onClick={() => {\n                  betterHandler(4);\n                }}\n                value={4}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(5);\n                }}\n                value={5}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(6);\n                }}\n                value={6}\n              />\n            </div>\n\n            <div className=\"row\">\n              <CalcButton\n                onClick={() => {\n                  betterHandler(7);\n                }}\n                value={7}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(8);\n                }}\n                value={8}\n              />\n              <CalcButton\n                onClick={() => {\n                  betterHandler(9);\n                }}\n                value={9}\n              />\n            </div>\n\n            <div className=\"row\">\n              <CalcButton\n                onClick={() => {\n                  operatorHandler(\"+\");\n                }}\n                value={\"+\"}\n              />\n              <CalcButton\n                onClick={() => {\n                  operatorHandler(\"*\");\n                }}\n                value={\"*\"}\n              />\n              <CalcButton\n                onClick={() => {\n                  operatorHandler(\"-\");\n                }}\n                value={\"-\"}\n              />\n            </div>\n\n            <div className=\"row ce_button\">\n              <CalcButton\n                onClick={() => {\n                  clearHandler();\n                }}\n                value={\"CE\"}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/workspace/web-module-project-reducer/src/components/TotalDisplay.js",[],"/workspace/web-module-project-reducer/src/components/CalcButton.js",[],"/workspace/web-module-project-reducer/src/actions/index.js",[],"/workspace/web-module-project-reducer/src/reducers/index.js",["38"],"import {\n  ADD_ONE,\n  APPLY_NUMBER,\n  CHANGE_OPERATION,\n  CLEAR_DISPLAY,\n} from \"./../actions\";\n\nexport const initialState = {\n  total: 0,\n  operation: \"+\",\n  memory: 0,\n};\n\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1,\n      };\n\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation),\n      };\n\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload,\n      };\n\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        total: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":4,"column":9,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":31,"column":9,"nodeType":"49","endLine":31,"endColumn":46},{"ruleId":"50","severity":1,"message":"51","line":31,"column":46,"nodeType":"49","endLine":31,"endColumn":93},{"ruleId":"52","severity":1,"message":"53","line":10,"column":5,"nodeType":"54","messageId":"55","endLine":17,"endColumn":6},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'ADD_ONE' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]